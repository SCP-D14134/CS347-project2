[{"/Users/rentx/Progamming/project2/src/index.js":"1","/Users/rentx/Progamming/project2/src/App.js":"2","/Users/rentx/Progamming/project2/src/Swatch.js":"3","/Users/rentx/Progamming/project2/src/Picker.js":"4","/Users/rentx/Progamming/project2/src/backend/consumer/tickerR.js":"5"},{"size":219,"mtime":1607635004037,"results":"6","hashOfConfig":"7"},{"size":933,"mtime":1607774878854,"results":"8","hashOfConfig":"7"},{"size":436,"mtime":1607638947571,"results":"9","hashOfConfig":"7"},{"size":1441,"mtime":1607640801822,"results":"10","hashOfConfig":"7"},{"size":324,"mtime":1607774582984,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"pftntu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rentx/Progamming/project2/src/index.js",[],["24","25"],"/Users/rentx/Progamming/project2/src/App.js",["26"],"import React, { useState } from 'react';\nimport './App.css';\n\nimport Swatch from './Swatch.js';\nimport Picker from './Picker.js';\nimport tickerR from './backend/consumer/tickerR.js';\n\nconst inititalColors = [\n  { name: \"green\", hex: \"#00FF00\" },\n  { name: \"pumpkin\", hex: \"#FF9900\" },\n  { name: \"cornflower\", hex: \"#6495ed\" },\n  { name: \"teal\", hex: \"#008080\" },\n  { name: \"peru\", hex: \"#cd853f\" },\n];\n\nfunction App() {\n  const [colors, setColors] = useState([]);\n\n  const removeColor = name => {\n    setColors(colors => colors.filter(color => color.name !== name));\n  }\n\n  const addColor = newColor => {\n    setColors(colors => [newColor, ...colors.filter(color => color.name !== newColor.name)]);\n  }\n\n  return (\n    <div id=\"swatches-root\">\n      <Picker add={addColor} />\n      {colors.map(color => <Swatch key={color.name}\n        color={color} remove={removeColor} />)}\n      <tickerR />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/rentx/Progamming/project2/src/Swatch.js",[],"/Users/rentx/Progamming/project2/src/Picker.js",[],"/Users/rentx/Progamming/project2/src/backend/consumer/tickerR.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":8,"column":7,"nodeType":"33","messageId":"34","endLine":8,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'inititalColors' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]